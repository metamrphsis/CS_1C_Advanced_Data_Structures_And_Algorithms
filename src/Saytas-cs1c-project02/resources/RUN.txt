-----------------------------------------------------
-----------------------------------------------------
Test file: resources/groceries.txt
budget: 2000

NOTES: Testing target budget > sum of all elements.
-----------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
2000

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 3 ms : 750032 ns
Purchased grocery prices are:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]
Done with ShoppingBag.



---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt
budget: 17.5

NOTES: Testing set of elements found with sums
       to exactly to target budget.
---------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
17.5

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 448757 ns
Purchased grocery prices are:
[2.5, 15.0]
Done with ShoppingBag.



---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt
budget: 20

NOTES: Testing target budget returning closest match.
---------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
20

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 2 ms : 981958 ns
Purchased grocery prices are:
[2.5, 11.5, 6.0]
Done with ShoppingBag.










// myGroceries.txt file

-----------------------------------------------------
-----------------------------------------------------
Test file: resources/groceries.txt
budget: 2000

NOTES: Testing target budget > sum of all elements.
-----------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.99, 5.99, 4.99, 8.99, 17.99, 1.79, 5.49, 4.99]

Enter your budget:
2000

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 5 ms : 808422 ns
Purchased grocery prices are:
[2.99, 5.99, 4.99, 8.99, 17.99, 1.79, 5.49, 4.99]
Done with ShoppingBag.



---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt
budget: 25.97

NOTES: Testing set of elements found with sums
       to exactly to target budget.
---------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.99, 5.99, 4.99, 8.99, 17.99, 1.79, 5.49, 4.99]

Enter your budget:
25.97

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 3 ms : 187261 ns
Purchased grocery prices are:
[2.99, 4.99, 17.99]
Done with ShoppingBag




---------------------------------------------------
---------------------------------------------------
Test file: resources/groceries.txt
budget: 33

NOTES: Testing target budget returning closest match.
---------------------------------------------------

The list of groceries has 8 items.
Groceries wanted:
[2.99, 5.99, 4.99, 8.99, 17.99, 1.79, 5.49, 4.99]

Enter your budget:
33

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 5 ms : 117364 ns
Purchased grocery prices are:
[5.99, 8.99, 17.99]
Done with ShoppingBag.